{"ast":null,"code":"import _slicedToArray from \"D:\\\\Projects 2\\\\Training\\\\react-tetris\\\\react-tetris\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects 2\\\\Training\\\\react-tetris\\\\react-tetris\\\\src\\\\components\\\\Tetris.js\";\nimport React, { useState } from 'react'; // components\n\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport { createStage } from '../gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'; // Custom hooks\n\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\n\nconst Tetris = () => {\n  console.log('re-render');\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        dropTime = _useState2[0],\n        setDropTime = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gameOver = _useState4[0],\n        setGameOver = _useState4[1];\n\n  const _usePlayer = usePlayer(),\n        _usePlayer2 = _slicedToArray(_usePlayer, 1),\n        player = _usePlayer2[0];\n\n  const _useStage = useStage(player),\n        _useStage2 = _slicedToArray(_useStage, 2),\n        stage = _useStage2[0],\n        setStage = _useStage2[1];\n\n  const movePlayer = dir => {};\n\n  const startGame = () => {};\n\n  const drop = () => {};\n\n  const dropPlayer = () => {};\n\n  const move = ({\n    keyCode\n  }) => {};\n\n  return React.createElement(StyledTetrisWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(StyledTetris, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Stage, {\n    stage: stage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, gameOver ? React.createElement(Display, {\n    gameOver: gameOver,\n    text: \"Game Over\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: \"Score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Rows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Level\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(StartButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))));\n};\n\nexport default Tetris;","map":{"version":3,"sources":["D:/Projects 2/Training/react-tetris/react-tetris/src/components/Tetris.js"],"names":["React","useState","Stage","Display","StartButton","createStage","StyledTetrisWrapper","StyledTetris","usePlayer","useStage","Tetris","console","log","dropTime","setDropTime","gameOver","setGameOver","player","stage","setStage","movePlayer","dir","startGame","drop","dropPlayer","move","keyCode"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,uBAAlD,C,CAEA;;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AADiB,oBAGeX,QAAQ,CAAC,IAAD,CAHvB;AAAA;AAAA,QAGVY,QAHU;AAAA,QAGAC,WAHA;;AAAA,qBAIeb,QAAQ,CAAC,KAAD,CAJvB;AAAA;AAAA,QAIVc,QAJU;AAAA,QAIAC,WAJA;;AAAA,qBAMAR,SAAS,EANT;AAAA;AAAA,QAMVS,MANU;;AAAA,oBAOSR,QAAQ,CAACQ,MAAD,CAPjB;AAAA;AAAA,QAOVC,KAPU;AAAA,QAOHC,QAPG;;AASjB,QAAMC,UAAU,GAAGC,GAAG,IAAI,CAEzB,CAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,QAAMC,IAAI,GAAG,MAAM,CAElB,CAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIA,QAAMC,IAAI,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAe,CAE3B,CAFD;;AAIA,SACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAER,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,GACL,oBAAC,OAAD;AACI,IAAA,QAAQ,EAAEA,QADd;AAEI,IAAA,IAAI,EAAC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAPR,EAaI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CAFJ,CADJ,CADJ;AAsBH,CAnDD;;AAqDA,eAAeL,MAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n// components\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\n\r\nimport { createStage } from '../gameHelpers';\r\n\r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\r\n\r\n// Custom hooks\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useStage } from '../hooks/useStage';\r\n\r\nconst Tetris = () => {\r\n    console.log('re-render')\r\n\r\n    const [dropTime, setDropTime] = useState(null);\r\n    const [gameOver, setGameOver] = useState(false);\r\n\r\n    const [player] = usePlayer();\r\n    const [stage, setStage] = useStage(player);\r\n\r\n    const movePlayer = dir => {\r\n\r\n    };\r\n\r\n    const startGame = () => {\r\n\r\n    };\r\n\r\n    const drop = () => {\r\n\r\n    };\r\n\r\n    const dropPlayer = () => {\r\n\r\n    };\r\n\r\n    const move = ({keyCode}) => {\r\n        \r\n    };\r\n\r\n    return (\r\n        <StyledTetrisWrapper>\r\n            <StyledTetris>\r\n                <Stage stage={stage}/>\r\n                <aside>\r\n                    {gameOver ? (\r\n                        <Display \r\n                            gameOver={gameOver}\r\n                            text=\"Game Over\"\r\n                        />\r\n                    ) : (\r\n                        <div>\r\n                            <Display text=\"Score\" />\r\n                            <Display text=\"Rows\" />\r\n                            <Display text=\"Level\" />\r\n                        </div>\r\n                    )}\r\n                    <StartButton />\r\n                </aside>\r\n            </StyledTetris>\r\n        </StyledTetrisWrapper>\r\n    )\r\n}\r\n\r\nexport default Tetris;"]},"metadata":{},"sourceType":"module"}