{"ast":null,"code":"import _slicedToArray from \"D:\\\\Projects 2\\\\tetris-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects 2\\\\tetris-react\\\\src\\\\components\\\\Tetris.js\";\nimport React, { useState } from 'react'; // components\n\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton'; // helpers\n\nimport { createStage, checkCollision } from '../gameHelpers'; // Styled compoennets\n\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'; // Custom hooks\n\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\n\nconst Tetris = () => {\n  console.log('re-render');\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        dropTime = _useState2[0],\n        setDropTime = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gameOver = _useState4[0],\n        setGameOver = _useState4[1];\n\n  const _usePlayer = usePlayer(),\n        _usePlayer2 = _slicedToArray(_usePlayer, 3),\n        player = _usePlayer2[0],\n        updatePlayerPos = _usePlayer2[1],\n        resetPlayer = _usePlayer2[2];\n\n  const _useStage = useStage(player, resetPlayer),\n        _useStage2 = _slicedToArray(_useStage, 2),\n        stage = _useStage2[0],\n        setStage = _useStage2[1];\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) {}\n\n    updatePlayerPos({\n      x: dir,\n      y: 0\n    });\n  };\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    resetPlayer();\n  };\n\n  const drop = () => {\n    updatePlayerPos({\n      x: 0,\n      y: 1,\n      collided: false\n    });\n  };\n\n  const dropPlayer = () => {\n    drop();\n  };\n\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      switch (keyCode) {\n        case 37:\n          // Left Arrow\n          movePlayer(-1);\n          break;\n\n        case 39:\n          // Right Arrow\n          movePlayer(1);\n          break;\n\n        case 40:\n          // Down Arrow\n          dropPlayer();\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  return React.createElement(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(StyledTetris, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Stage, {\n    stage: stage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, gameOver ? React.createElement(Display, {\n    gameOver: gameOver,\n    text: \"Game Over\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: \"Score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Rows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Level\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(StartButton, {\n    callback: startGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))));\n};\n\nexport default Tetris;","map":{"version":3,"sources":["D:/Projects 2/tetris-react/src/components/Tetris.js"],"names":["React","useState","Stage","Display","StartButton","createStage","checkCollision","StyledTetrisWrapper","StyledTetris","usePlayer","useStage","Tetris","console","log","dropTime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","stage","setStage","movePlayer","dir","x","y","startGame","drop","collided","dropPlayer","move","keyCode","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n// components\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\n\r\n// helpers\r\nimport { createStage, checkCollision } from '../gameHelpers';\r\n\r\n// Styled compoennets\r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\r\n\r\n// Custom hooks\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useStage } from '../hooks/useStage';\r\n\r\nconst Tetris = () => {\r\n    console.log('re-render')\r\n\r\n    const [dropTime, setDropTime] = useState(null);\r\n    const [gameOver, setGameOver] = useState(false);\r\n\r\n    const [player, updatePlayerPos, resetPlayer] = usePlayer();\r\n    const [stage, setStage] = useStage(player, resetPlayer);\r\n\r\n    const movePlayer = dir => {\r\n        if(!checkCollision(player, stage, {x: dir, y: 0})) {\r\n\r\n        }\r\n        updatePlayerPos({ x: dir, y:0 })\r\n    };\r\n\r\n    const startGame = () => {\r\n        // Reset everything\r\n        setStage(createStage());\r\n        resetPlayer();\r\n    };\r\n\r\n    const drop = () => {\r\n        updatePlayerPos({x: 0, y: 1, collided: false})\r\n    };\r\n\r\n    const dropPlayer = () => {\r\n        drop();\r\n    };\r\n\r\n    const move = ({keyCode}) => {\r\n        if(!gameOver) {\r\n            switch (keyCode) {\r\n                case 37: // Left Arrow\r\n                    movePlayer(-1)\r\n                    break;\r\n                case 39: // Right Arrow\r\n                    movePlayer(1)\r\n                    break;\r\n                case 40: // Down Arrow\r\n                    dropPlayer()\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledTetrisWrapper\r\n            role=\"button\"\r\n            tabIndex=\"0\"\r\n            onKeyDown={e=> move(e)}\r\n        >\r\n            <StyledTetris>\r\n                <Stage stage={stage}/>\r\n                <aside>\r\n                    {gameOver ? (\r\n                        <Display \r\n                            gameOver={gameOver}\r\n                            text=\"Game Over\"\r\n                        />\r\n                    ) : (\r\n                        <div>\r\n                            <Display text=\"Score\" />\r\n                            <Display text=\"Rows\" />\r\n                            <Display text=\"Level\" />\r\n                        </div>\r\n                    )}\r\n                    <StartButton \r\n                        callback={startGame}\r\n                    />\r\n                </aside>\r\n            </StyledTetris>\r\n        </StyledTetrisWrapper>\r\n    )\r\n}\r\n\r\nexport default Tetris;"]},"metadata":{},"sourceType":"module"}